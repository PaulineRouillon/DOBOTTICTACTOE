// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.ro');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Adaugă un comentariu";
Blockly.Msg.AUTH = "Va rugăm să autorizați această aplicație să permită salvarea activității dumneavoastră și să permită distribuirea acesteia de către dumneavoastră.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Schimbaţi valoarea:";
Blockly.Msg.CHAT = "Discută cu colaboratorul tău tastând în cadrul acestei zone!";
Blockly.Msg.CLEAN_UP = "Clean up Blocks";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Restrange blocurile";
Blockly.Msg.COLLAPSE_BLOCK = "Restrange blocul";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "culoare 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "culoare 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "Raport";
Blockly.Msg.COLOUR_BLEND_TITLE = "amestec";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Amestecă două culori cu un raport dat (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://ro.wikipedia.org/wiki/Culoare";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Alege o culoare din paleta de culori.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "culoare aleatorie";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Alege o culoare la întâmplare.";
Blockly.Msg.COLOUR_RGB_BLUE = "albastru";
Blockly.Msg.COLOUR_RGB_GREEN = "verde";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "roşu";
Blockly.Msg.COLOUR_RGB_TITLE = "colorează cu";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Creează o culoare cu suma specificată de roşu, verde şi albastru.  Toate valorile trebuie să fie între 0 şi 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "ieşi din bucla";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continuă cu următoarea iterație a buclei";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Ieși din bucla care conţine.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Sari peste restul aceastei bucle, şi continuă cu urmatoarea iteratie.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Avertisment: Acest bloc pote fi utilizat numai în interiorul unei bucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "pentru fiecare element %1 în listă %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Pentru fiecare element din listă, setaţi variabila '%1' ca valoarea elementului, şi apoi faceţi unele declaraţii.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "numără cu %1 de la %2 la %3 prin %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Cu variablia \"%1\" ia o valoare din numărul început la numărul final, numara in intervalul specificat, apoi face blocurile specificate.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Adăugaţi o condiţie in blocul if.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Adauga o stare finala, cuprinde toata conditia din blocul if.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Adaugă, elimină sau reordonează secţiuni pentru a reconfigura acest bloc if.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "altfel";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "altfel dacă";
Blockly.Msg.CONTROLS_IF_MSG_IF = "dacă";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Dacă o valoare este adevărată, atunci fa unele declaraţii.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Dacă o valoare este adevărat, atunci face primul bloc de declaraţii.  Altfel, face al doilea bloc de declaraţii.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Dacă prima valoare este adevărat, atunci face primul bloc de declaraţii.  Altfel, dacă a doua valoare este adevărat, face al doilea bloc de declaraţii.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Dacă prima valoare este adevărat, atunci face primul bloc de declaraţii.  Altfel, dacă a doua valoare este adevărat, face al doilea bloc de declaraţii.  În cazul în care niciuna din  valorilor nu este adevărat, face ultimul bloc de declaraţii.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "fă";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repetă de %1 ori";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Face unele afirmaţii de mai multe ori.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "Repetaţi până când";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repetă în timp ce";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "În timp ce o valoare este adevărat, atunci face unele declaraţii.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "În timp ce o valoare este adevărat, atunci face unele declaraţii.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Ștergi toate cele %1 (de) blocuri?";
Blockly.Msg.DELETE_BLOCK = "Șterge Bloc";
Blockly.Msg.DELETE_X_BLOCKS = "Ștergeți %1 Blocuri";
Blockly.Msg.DISABLE_BLOCK = "Dezactivaţi bloc";
Blockly.Msg.DUPLICATE_BLOCK = "Duplicati";
Blockly.Msg.ENABLE_BLOCK = "Permite bloc";
Blockly.Msg.EXPAND_ALL = "Extinde blocuri";
Blockly.Msg.EXPAND_BLOCK = "Extinde bloc";
Blockly.Msg.EXTERNAL_INPUTS = "Intrări externe";
Blockly.Msg.HELP = "Ajutor";
Blockly.Msg.INLINE_INPUTS = "Intrări în linie";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "creează listă goală";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returnează o listă, de lungime 0, care nu conţine înregistrări de date";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "listă";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Adaugă, elimină sau reordonează secţiuni ca să reconfiguraţi aceste blocuri de listă.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "creează listă cu";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Adăugaţi un element la listă.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Creaţi o listă cu orice număr de elemente.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "primul";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# de la sfârșit";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "obţine";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obţine şi elimină";
Blockly.Msg.LISTS_GET_INDEX_LAST = "ultimul";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aleator";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "elimină";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returnează primul element dintr-o listă.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returneaza elementul la poziţia specificată într-o listă.  #1 este ultimul element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returneaza elementul la poziţia specificată într-o listă.  #1 este primul element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returnează ultimul element într-o listă.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returneaza un element aleatoriu într-o listă.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Elimină şi returnează primul element într-o listă.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Elimină şi returneaza elementul la poziţia specificată într-o listă.  #1 este ultimul element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Elimină şi returneaza elementul la poziţia specificată într-o listă.  #1 este primul element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Elimină şi returnează ultimul element într-o listă.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Elimină şi returnează un element aleatoriu într-o listă.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Elimină primul element într-o listă.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Elimină elementul la poziţia specificată într-o listă.  #1 este ultimul element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Elimină elementul la poziţia specificată într-o listă.  #1 este primul element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Elimină ultimul element într-o listă.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Elimină un element aleatoriu într-o listă.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "la # de la sfarsit";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "la #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "la ultima";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obţine sub-lista de la primul";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obţine sub-lista de la # de la sfârşitul";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obţine sub-lista de la #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creează o copie a porţiunii specificate dintr-o listă.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "Găseşte prima apariţie a elementului";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "găseşte ultima apariţie a elementului";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Revine la indexul de la prima/ultima apariție a elementului din listă. Returnează 0 dacă elementul nu este găsit.";
Blockly.Msg.LISTS_INLIST = "în listă";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 este gol";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Returnează adevărat dacă lista este goală.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "lungime de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returnează lungimea unei liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "creaza lista cu %1 elemente repetate de %2 ori";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creează o listă alcătuită dintr-o anumită valoare repetată de numărul specificat de ori.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "ca";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "introduceţi la";
Blockly.Msg.LISTS_SET_INDEX_SET = "seteaza";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserează elementul la începutul unei liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserează elementul la poziţia specificată într-o listă.  #1 este ultimul element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserează elementul la poziţia specificată într-o listă.  #1 este primul element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Adăugă elementul la sfârşitul unei liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserează elementul aleatoriu într-o listă.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Setează primul element într-o listă.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Setează elementul la poziţia specificată într-o listă.  #1 este ultimul element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Setează elementul la poziţia specificată într-o listă.  #1 este primul element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Setează ultimul element într-o listă.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Setează un element aleator într-o listă.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "convertește textul în listă";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "convertește lista în text";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Concatenează o listă de texte (alternate cu separatorul) într-un text unic";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Împarte textul într-o listă de texte, despărțite prin fiecare separator";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "cu separatorul";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "fals";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returnează adevărat sau fals.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "adevărat";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Returnează adevărat dacă ambele intrări sunt egale.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Returnează adevărat dacă prima intrare este mai mare decât a doua intrare.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Returnează adevărat dacă prima intrare este mai mare sau egală cu a doua intrare.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Returnează adevărat dacă prima intrare este mai mică decât a doua intrare.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Returnează adevărat dacă prima intrare este mai mică sau egală cu a doua intrare.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Returnează adevărat daca cele două intrări nu sunt egale.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "non %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returnează adevărat dacă intrarea este falsă.  Returnează fals dacă intrarea este adevărată.";
Blockly.Msg.LOGIC_NULL = "nul";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "returnează nul.";
Blockly.Msg.LOGIC_OPERATION_AND = "şi";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "sau";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Returnează adevărat daca ambele intrări sunt adevărate.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Returnează adevărat dacă cel puţin una din intrări este adevărată.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "dacă este fals";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "dacă este adevărat";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Verifică condiţia din \"test\". Dacă condiţia este adevărată, returnează valoarea \"în cazul în care adevărat\"; în caz contrar întoarce valoarea \"în cazul în care e fals\".";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://ro.wikipedia.org/wiki/Aritmetic%C4%83";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Returnează suma a două numere.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Returnează câtul celor două numere.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Returneaza diferenţa dintre cele două numere.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Returnează produsul celor două numere.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Returneaza numărul rezultat prin ridicarea primului număr la puterea celui de-al doilea.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "schimbă %1 de %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Adaugă un număr variabilei '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://ro.wikipedia.org/wiki/Constant%C4%83_matematic%C4%83";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Întoarcă una din constantele comune: π (3.141...), e (2.718...), φ (1,618...), sqrt(2) (1.414...), sqrt(½) (0.707...) sau ∞ (infinitate).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrânge %1 redus %2 ridicat %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrânge un număr să fie între limitele specificate (inclusiv).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "este divizibil cu";
Blockly.Msg.MATH_IS_EVEN = "este par";
Blockly.Msg.MATH_IS_NEGATIVE = "este negativ";
Blockly.Msg.MATH_IS_ODD = "este impar";
Blockly.Msg.MATH_IS_POSITIVE = "este pozitiv";
Blockly.Msg.MATH_IS_PRIME = "este prim";
Blockly.Msg.MATH_IS_TOOLTIP = "Verifică dacă un număr este un par, impar, prim, întreg, pozitiv, negativ, sau dacă este divizibil cu un anumit număr.  Returnează true sau false.";
Blockly.Msg.MATH_IS_WHOLE = "este întreg";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "restul la %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Întoarce restul din împărţirea celor două numere.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un număr.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "media listei";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maximul listei";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "media listei";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimul listei";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "moduri de listă";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "element aleatoriu din lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "deviația standard a listei";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma listei";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Întoarce media (aritmetică) a valorilor numerice în listă.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Întoarce cel mai mare număr din listă.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Întoarce numărul median în listă.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Returnează cel mai mic număr din listă.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Returnează o listă cu cel(e) mai frecvent(e) element(e) din listă.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Returnează un element aleatoriu din listă.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Întoarce deviația standard a listei.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Returnează suma tuturor numerelor din lista.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fracții aleatorii";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Returnează o fracţie aleatoare între 0.0 (inclusiv) si 1.0 (exclusiv).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "un număr întreg aleator de la %1 la %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Returnează un număr întreg aleator aflat între cele două limite specificate, inclusiv.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "rotund";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "rotunjit";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "rotunjește în sus";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Rotunjirea unui număr în sus sau în jos.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolută";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "rădăcina pătrată";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Returnează valoarea absolută a unui număr.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Returnează e la puterea unui număr.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Întoarce logaritmul natural al unui număr.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Returnează logaritmul în baza 10 a unui număr.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Returnează negaţia unui număr.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Returnează 10 la puterea unui număr.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Returnează rădăcina pătrată a unui număr.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "arccos";
Blockly.Msg.MATH_TRIG_ASIN = "arcsin";
Blockly.Msg.MATH_TRIG_ATAN = "arctg";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tg";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Returnează arccosinusul unui număr.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Returnează arcsinusul unui număr.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Returnează arctangenta unui număr.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Întoarce cosinusul unui grad (nu radianul).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Întoarce cosinusul unui grad (nu radianul).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Întoarce tangenta unui grad (nu radianul).";
Blockly.Msg.ME = "Eu";
Blockly.Msg.NEW_VARIABLE = "Variabilă nouă...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Noul nume de variabilă:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "permite declarațiile";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "cu:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Executați funcția '%1 'definită de utilizator.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Executați funcția '%1 'definită de utilizator şi folosiţi producţia sa.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "cu:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Creaţi '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "fă ceva";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "la";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crează o funcţie cu nici o ieşire.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "returnează";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Creează o funcţie cu o ieşire.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Atenţie: Această funcţie are parametri duplicaţi.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Evidenţiază definiţia funcţiei";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Dacă o valoare este adevărată, atunci returnează valoarea a doua.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Avertisment: Acest bloc poate fi utilizat numai în definiţia unei funcţii.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nume de intrare:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Adaugă un parametru de intrare pentru funcție.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "intrări";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Adăugă, șterge sau reordonează parametrii de intrare ai acestei funcții.";
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Elimină comentariu";
Blockly.Msg.RENAME_VARIABLE = "Redenumirea variabilei...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Redenumeşte toate variabilele '%1' în:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "Adăugaţi text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "la";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Adăugaţi text la variabila '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "la litere mici";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "către Titlul de caz";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "la MAJUSCULE";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Întoarce o copie a textului într-un caz diferit.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obţine prima litera";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obţine litera # de la sfârșit";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtine litera #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "în text";
Blockly.Msg.TEXT_CHARAT_LAST = "obţine o litera oarecare";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtine o litera oarecare";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returnează litera la poziția specificată.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Adaugă un element în text.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "alăturaţi-vă";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Adaugă, elimină sau reordonează secțiuni ca să reconfigureze blocul text.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "la litera # de la sfarsit";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "la litera #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "la ultima literă";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "în text";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obţine un subșir de la prima literă";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obține un subșir de la litera # de la sfârșit";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obține subșir de la litera #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returnează o anumită parte din text.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "în text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "găseşte prima apariţie a textului";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "găseşte ultima apariţie a textului";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returnează indicele primei/ultimei apariţii din primul text în al doilea text.  Returnează 0 dacă textul nu este găsit.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 este gol";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returnează adevărat dacă textul furnizat este gol.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "crează text cu";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Creaţi o bucată de text prin unirea oricărui număr de elemente.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "lungime de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returnează numărul de litere (inclusiv spaţiile) în textul furnizat.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "imprimare %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Afișează textul specificat, numărul sau altă valoare.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Solicită utilizatorul pentru un număr.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Solicită utilizatorul pentru text.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "solicită pentru număr cu mesaj";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "solicită pentru text cu mesaj";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "O literă, cuvânt sau linie de text.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "taie spațiile de pe ambele părți ale";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "tăiaţi spațiile din partea stângă a";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "taie spațiile din partea dreaptă a";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Returnează o copie a textului fără spațiile de la unul sau ambele capete.";
Blockly.Msg.TODAY = "Astăzi";
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "element";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Crează 'set %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returnează valoarea acestei variabile.";
Blockly.Msg.VARIABLES_SET = "seteaza %1 la %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Crează 'get %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Setează această variabilă sa fie egală la intrare.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

Blockly.Msg.DOBOT_ON = "ON";
Blockly.Msg.DOBOT_OFF = "OFF";
Blockly.Msg.Dobot_Speed = "Speed";
Blockly.Msg.Dobot_DELTAPULSE = "DeltaPulse"
Blockly.Msg.DOBOT_ENABELD = "IsEnabled";
Blockly.Msg.DOBOT_GripperON = "Gripper";
Blockly.Msg.DOBOT_GripperOff = "Release";
Blockly.Msg.DOBOT_GripperPROHIBIT = "Disable";
Blockly.Msg.DOBOT_BASEIC_HOME = "Home";
Blockly.Msg.DOBOT_BASEIC_HOME_TOOLTIP = "Home";
Blockly.Msg.DOBOT_BASEIC_TIME = "GetTime";
Blockly.Msg.DOBOT_BASEIC_TIME_TOOLTIP = "GetTime, unit:s";
Blockly.Msg.DOBOT_BASEIC_SETENDTYPE = "ChooseEndTools";
Blockly.Msg.DOBOT_BASEIC_SETENDTYPE_TOOLTIP = "Choose End Tools";
Blockly.Msg.DOBOT_BASEIC_SETENDTYPE_SUCTIONCAP = "SuctionCup";
Blockly.Msg.DOBOT_BASEIC_SETENDTYPE_GRIPPER = "Gripper";
Blockly.Msg.DOBOT_BASEIC_SETENDTYPE_LASER = "Laser";
Blockly.Msg.DOBOT_BASEIC_SETENDTYPE_PEN = "Pen";
Blockly.Msg.DOBOT_BASEIC_SETENDEFFECTORPARAMS = "Set End Effector Params"; //parekr add 2018 9 8
Blockly.Msg.DOBOT_BASEIC_SETENDEFFECTORPARAMS_TOOLTIP = "Set End Effector Params";
Blockly.Msg.DOBOT_SET_JUMP_HEIGHT = "SetJumpHeight";
Blockly.Msg.DOBOT_SET_JUMP_HEIGHT_TOOLTIP = "Set Jump Height";
Blockly.Msg.DOBOT_SETR = "SetR";
Blockly.Msg.DOBOT_SETR_TOOLTIP = "Set R";
Blockly.Msg.DOBOT_SUCTIONCAP = "SuctionCup";
Blockly.Msg.DOBOT_SUCTIONCAP_TOOLTIP = "SuctionCup";
Blockly.Msg.DOBOT_GRIPPER = "Gripper";
Blockly.Msg.DOBOT_GRIPPER_TOOLTIP = "Gripper";
Blockly.Msg.DOBOT_GET_CURRETN_COORDINATE= "GetCurrentCoordinate";
Blockly.Msg.DOBOT_GET_CURRETN_COORDINATE_TOOLTIP = "Get Current Coordinate";
Blockly.Msg.DOBOT_GET_CURRENT_ANGLE= "GetJointAngle";
Blockly.Msg.DOBOT_GET_CURRENT_ANGLE_TOOLTIP = "Get Joint Angle";
Blockly.Msg.DOBOT_DELAYTIME= "Delaytime";
Blockly.Msg.DOBOT_DELAYTIME_TOOLTIP = "Delaytime";
Blockly.Msg.DOBOT_MOTOR = "Motor"
Blockly.Msg.DOBOT_Value = "value";
Blockly.Msg.DOBOT_FREQUENCY = "frequency";
Blockly.Msg.DOBOT_DUTYCYCLE = "dutyCycle";

Blockly.Msg.DOBOT_joint1 = "Joint1";
Blockly.Msg.DOBOT_joint2 = "Joint2";
Blockly.Msg.DOBOT_joint3 = "Joint3";
Blockly.Msg.DOBOT_joint4 = "Joint4";
Blockly.Msg.DOBOT_covery = "L";
Blockly.Msg.DOBOT_xBias = "XBias";
Blockly.Msg.DOBOT_yBias = "YBias";
Blockly.Msg.DOBOT_zBias = "ZBias";
Blockly.Msg.DOBOT_j1 = "Joint1";
Blockly.Msg.DOBOT_j2 = "Joint2";
Blockly.Msg.DOBOT_j3 = "Joint3";
Blockly.Msg.DOBOT_j4 = "Joint4";
Blockly.Msg.DOBOT_j1Velocity = "Joint1Velocity";
Blockly.Msg.DOBOT_j2Velocity = "Joint2Velocity";
Blockly.Msg.DOBOT_j3Velocity = "Joint3Velocity";
Blockly.Msg.DOBOT_j4Velocity = "Joint4Velocity";
Blockly.Msg.DOBOT_j1Acceleration = "Joint1Acceleration";
Blockly.Msg.DOBOT_j2Acceleration = "Joint1Acceleration";
Blockly.Msg.DOBOT_j3Acceleration = "Joint1Accelerationy";
Blockly.Msg.DOBOT_j4Acceleration = "Joint1Acceleration";
Blockly.Msg.DOBOT_height = "Height";
Blockly.Msg.DOBOT_lVelocity = "lVelocity";
Blockly.Msg.DOBOT_lAcceleration = "lAcceleration";
Blockly.Msg.DOBOT_value = "Value";
Blockly.Msg.DOBOT_type = "Type";

Blockly.Msg.DOBOT_THRESHOLD = "Threshold";
Blockly.Msg.DOBOT_ANGLEUNIT = "Degree";
Blockly.Msg.DOBOT_SETLOSTSTEPPARAMS_TOOLTIP = "Set Lost Step Params";
Blockly.Msg.DOBOT_SETLOSTSTEPCMD_TOOLTIP = "Check Lost Step";
Blockly.Msg.Dobot_DISTANCE = "Distance";
Blockly.Msg.Dobot_IO_INPUT_3V = "Input 3.3V";
Blockly.Msg.Dobot_IO_INPUT_5V = "Input 5V";
Blockly.Msg.Dobot_IO_ADC = "Input AD";
Blockly.Msg.Dobot_IO_OUTPUT_3V = "Output 3.3V";
Blockly.Msg.Dobot_IO_OUTPUT_5V = "Output 5V";
Blockly.Msg.Dobot_IO_OUTPUT_12V = "Output 12V";
Blockly.Msg.Dobot_IO_PWM = "Output PWM";
Blockly.Msg.DOBOT_ACCELERATION = "Acceleration";
Blockly.Msg.DOBOT_VELOCITY = "Velocity";


//2017-07-03
Blockly.Msg.DOBOT_SET_JOINT_SPEED = "SetJointSpeed";
Blockly.Msg.DOBOT_SET_JOINT_SPEED_TOOLTIP = "Set Joint Speed";
Blockly.Msg.DOBOT_SET_LINEAR_SPEED = "SetMotionRatio";
Blockly.Msg.DOBOT_SET_LINEAR_SPEED_TOOLTIP = "Set Motion Ratio";
Blockly.Msg.DOBOT_VELOCITY_RATIO = "VelocityRatio";
Blockly.Msg.DOBOT_ACCELERATION_RATIO = "AccelerationRatio";
Blockly.Msg.DOBOT_SET_MOTOR = "SetMotorSpeed";
Blockly.Msg.DOBOT_SET_MOTOR_TOOLTIP = "Set Motor Speed";
Blockly.Msg.DOBOT_SET_MOTORS = "SetMotorSpeedAndDistance";
Blockly.Msg.DOBOT_SET_MOTORS_TOOLTIP = "Set Motor Speed And Distance";
Blockly.Msg.DOBOT_GOTO = "MoveTo";
Blockly.Msg.DOBOT_GOTO_TOOLTIP = "Move to";
Blockly.Msg.DOBOT_JUMPTO = "JumpTo";
Blockly.Msg.DOBOT_JUMPTO_TOOLTIP = "Jump To";
Blockly.Msg.DOBOT_MOVE = "MoveDistance";
Blockly.Msg.DOBOT_MOVE_TOOLTIP = "Move Distance";
Blockly.Msg.DOBOT_SET_JOINT_ANGLE = "SetJointAngle";
Blockly.Msg.DOBOT_SET_JOINT_ANGLE_TOOLTIP = "Set Joint Angle";
Blockly.Msg.DOBOT_SET_INFRARED_SENEOR = "SetPhotoelectricSensor";
Blockly.Msg.DOBOT_SET_INFRARED_SENEOR_TOOLTIP = "Set Photoelectric Sensor";
Blockly.Msg.DOBOT_GET_INFRARED_SENEOR = "GetPhotoelectricSensor";
Blockly.Msg.DOBOT_GET_INFRARED_SENEOR_TOOLTIP = "Detection of sensors in front of a certain distance whether there is an object, there are objects for 1; no object for 0.";
Blockly.Msg.DOBOT_SET_COLORSENEOR= "SetColorSensor";
Blockly.Msg.DOBOT_SET_COLORSENEOR_TOOLTIP = "Set Color Sensor";
Blockly.Msg.DOBOT_GET_COLORSENEOR= "IdentifyColor";
Blockly.Msg.DOBOT_GET_COLORSENEOR_TOOLTIP = "Used to identify 3 basic colors: blue, green, and red. Returns 1 when detecting the color, or else returns 0.";
Blockly.Msg.DOBOT_SET_CONVEYOR = "SetConveyor"
Blockly.Msg.DOBOT_SET_CONVEYOR_TOOLTIP = "Set Conveyor"
Blockly.Msg.DOBOT_SET_LINEAR_RAIL = "SetLinearRail"
Blockly.Msg.DOBOT_SET_LINEAR_RAIL_TOOLTIP = "Set Linear Rail"
Blockly.Msg.DOBOT_SETL = "MoveLinearRailTo";
Blockly.Msg.DOBOT_SETL_TOOLTIP = "Move Linear Rail To";
Blockly.Msg.DOBOT_SET_L_SPEED = "SetLinearRailSpeed";
Blockly.Msg.DOBOT_SET_L_SPEED_TOOLTIP = "Set Linear Rail Speed";
Blockly.Msg.DOBOT_POWER = "Power";
Blockly.Msg.DOBOT_LASER = "Laser";
Blockly.Msg.DOBOT_LASER_TOOLTIP = "Laser";
Blockly.Msg.DOBOT_SET_OUTPUT12V = "Set12VOutput  ";
Blockly.Msg.DOBOT_SET_OUTPUT12V_TOOLTIP = "Set 12V Output";
Blockly.Msg.DOBOT_SET_OUTPUT= "SetLevelOutput  ";
Blockly.Msg.DOBOT_SET_OUTPUT_TOOLTIP = "Set Level Output";
Blockly.Msg.DOBOT_GET_INPUT_EIO= "GetLevelInput  ";
Blockly.Msg.DOBOT_GET_INPUT_EIO_TOOLTIP = "Get Level Input";
Blockly.Msg.DOBOT_SET_PWM = "SetPWMOutput  ";
Blockly.Msg.DOBOT_SET_PWM_TOOLTIP = "Set PWM Output";
Blockly.Msg.DOBOT_GET_PWM = "GetPWMInput  ";
Blockly.Msg.DOBOT_GET_PWM_TOOLTIP = "Get PWM Input";
Blockly.Msg.DOBOT_GET_ADC = "GetADInput  ";
Blockly.Msg.DOBOT_GET_ADC_TOOLTIP = "Get AD Input";
Blockly.Msg.DOBOT_SET_IOMULTIPLEXING= "SetIOMultiplexing";
Blockly.Msg.DOBOT_SET_IOMULTIPLEXING_TOOLTIP = "SetIOMultiplexing";

//2017-09-27
Blockly.Msg.DOBOT_SET_COORDINATE_SPEED = "SetCoordinateSpeed";
Blockly.Msg.DOBOT_SET_COORDINATE_SPEED_TOOLTIP = "Set Coordinate Speed";

//2018-04-21
Blockly.Msg.DOBOT_SET_OUTPUT5V = "Set5VOutput  ";
Blockly.Msg.DOBOT_SET_OUTPUT5V_TOOLTIP = "Set 5V Output";

//2018-06-06
Blockly.Msg.DOBOT_PORT = "Port";
Blockly.Msg.DOBOT_HARDWARE = "Hardware";
Blockly.Msg.DOBOT_NEW = "V2";
Blockly.Msg.DOBOT_OLD = "V1";
Blockly.Msg.DOBOT_VERSION = "Version";


//2019-04-25
Blockly.Msg.DOBOT_MagicianLite = "Magician Lite";
Blockly.Msg.DOBOT_Controller = "Magic Box";
Blockly.Msg.DOBOT_DevType = "DevType";

Blockly.Msg.DOBOT_Set_SeeedRgbLED = "SetSeeedRgbLED";
Blockly.Msg.DOBOT_Set_SeeedRgbLED_TOOLTIP = "SetSeeedRgbLED";
Blockly.Msg.DOBOT_Get_SeeedColorSensor = "GetSeeedColorSensor";
Blockly.Msg.DOBOT_Get_SeeedColorSensor_TOOLTIP = "GetSeeedColorSensor";
Blockly.Msg.DOBOT_Set_SeeedColorSensor = "SetSeeedColorSensor";
Blockly.Msg.DOBOT_Set_SeeedColorSensor_TOOLTIP = "SetSeeedColorSensor";
Blockly.Msg.DOBOT_Get_SeeedInfraredSensor = "GetSeeedInfraredSensor";
Blockly.Msg.DOBOT_Get_SeeedInfraredSensor_TOOLTIP = "GetSeeedInfraredSensor";
Blockly.Msg.DOBOT_Set_SeeedInfraredSensor = "SetSeeedInfraredSensor";
Blockly.Msg.DOBOT_Set_SeeedInfraredSensor_TOOLTIP = "SetSeeedInfraredSensor";
Blockly.Msg.DOBOT_Get_SeeedTemperatureSensor = "GetSeeedTemperatureSensor";
Blockly.Msg.DOBOT_Get_SeeedTemperatureSensor_TOOLTIP = "GetSeeedTemperatureSensor";
Blockly.Msg.DOBOT_Set_SeeedTemperatureSensor = "SetSeeedTemperatureSensor";
Blockly.Msg.DOBOT_Set_SeeedTemperatureSensor_TOOLTIP = "SetSeeedTemperatureSensor";
Blockly.Msg.DOBOT_Get_SeeedDistanceSensor = "GetSeeedDistanceSensor";
Blockly.Msg.DOBOT_Get_SeeedDistanceSensor_TOOLTIP = "GetSeeedDistanceSensor";

//2019-11-06
Blockly.Msg.DOBOT_GET_ENDEFFECTORTYPE = "GetEndEffectorType";
Blockly.Msg.DOBOT_GET_ENDEFFECTORTYPE_TOOLTIP = "GetEndEffectorType";
Blockly.Msg.DOBOT_SET_SERVOANGLE = "SetServoAngle";
Blockly.Msg.DOBOT_SET_SERVOANGLE_TOOLTIP = "SetServoAngle";
Blockly.Msg.DOBOT_SERVO_PORT = "Servo";
Blockly.Msg.DOBOT_SERVO_ANGLE_VALUE = "Angle value";
Blockly.Msg.DOBOT_GET_SERVOANGLE = "GetServoAngle";
Blockly.Msg.DOBOT_GET_SERVOANGLE_TOOLTIP = "GetServoAngle";
// Blockly.Msg.DOBOT_SERVO_ANGLE = "度";
Blockly.Msg.DOBOT_SET_ARM_SPEED_RATIO = "SetArmSpeedRatio";
Blockly.Msg.DOBOT_SET_ARM_SPEED_RATIO_TOOLTIP = "SetArmSpeedRatio";
Blockly.Msg.DOBOT_SET_ARM_SPEED_MODE = "Run Mode";
Blockly.Msg.DOBOT_SET_ARM_SPEED_MODE_JOG = "JOG";
Blockly.Msg.DOBOT_SET_ARM_SPEED_MODE_OTHER = "OTHER";
Blockly.Msg.DOBOT_GET_ARM_SPEED_RATIO = "GetArmSpeedRatio";
Blockly.Msg.DOBOT_GET_ARM_SPEED_RATIO_TOOLTIP = "GetArmSpeedRatio";
Blockly.Msg.DOBOT_SET_Liner_SPEED_RATIO = "SetLSpeedRatio";
Blockly.Msg.DOBOT_SET_Liner_SPEED_RATIO_TOOLTIP = "SetLSpeedRatio";
Blockly.Msg.DOBOT_GET_Liner_SPEED_RATIO = "GetLSpeedRatio";
Blockly.Msg.DOBOT_GET_Liner_SPEED_RATIO_TOOLTIP = "GetLSpeedRatio";
Blockly.Msg.DOBOT_SET_LinearRail_SPEED_MODE = "Run Mode";
Blockly.Msg.DOBOT_SET_LinearRail_SPEED_MODE_JOG = "JOG";
Blockly.Msg.DOBOT_SET_LinearRail_SPEED_MODE_PTP = "PTP";
Blockly.Msg.DOBOT_SET_PROGBAR = "SetProgbar";
Blockly.Msg.DOBOT_SET_PROGBAR_VALUE = "Progress value";
Blockly.Msg.DOBOT_SET_PROGBAR_TOOLTIP = "SetProgbar";
Blockly.Msg.DOBOT_SET_PRINTINFO = "PrintInfo";
Blockly.Msg.DOBOT_SET_PRINTINFO_VALUE = "Infomation";
Blockly.Msg.DOBOT_SET_PRINTINFO_TOOLTIP = "PrintInfo";
Blockly.Msg.ADDPOINT = "AddPoint";